
= ruote-dm

ruote 2.1 extension for DataMapper (dm) persistence


== usage

This is how a ruote engine is setup with a ruote-dm storage (postgres) and a worker :

  require 'rubygems'
  require 'json' # gem install json
  require 'ruote'
  require 'ruote-dm' # gem install ruote-dm
  
  #DataMapper.setup(:default, 'sqlite3::memory:')
  #DataMapper.setup(:default, 'sqlite3:ruote_test.db')
  DataMapper.setup(:default, 'postgres://localhost/ruote_test')
  
  engine = Ruote::Engine.new(
    Ruote::Worker.new(
      Ruote::Dm::DmStorage.new(:default)))

  # ...

To create the tables in the database :

  Ruote::Dm::Document.auto_migrate!


== running tests

assuming you have

  ruote/
  ruote-dm/

* unit tests :

get into ruote/ and do

  ruby test/unit/storage.rb --dm

* functional tests :

get into ruote/ and do

  ruby test/functional/test.rb --dm


== license

MIT


== links

http://datamapper.org/

http://ruote.rubyforge.org/
http://github.com/jmettraux/ruote-dm


== feedback

mailing list : http://groups.google.com/group/openwferu-users
irc : irc.freenode.net #ruote

